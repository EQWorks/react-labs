name: Master

on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master

jobs:
  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [10.x, 12.x, 14.x]
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set Node.js version
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache Node Modules
        uses: actions/cache@v1
        with:
          path: node_modules
          key: ${{ runner.OS }}-${{ matrix.node-version }}-build-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.OS }}-${{ matrix.node-version }}-build-${{ env.cache-name }}-
            ${{ runner.OS }}-${{ matrix.node-version }}-build-
            ${{ runner.OS }}-${{ matrix.node-version }}-
            ${{ runner.OS }}-

      - run: yarn install
      - run: yarn lint

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [10.x, 12.x, 14.x]
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set Node.js version
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache Node Modules
        uses: actions/cache@v1
        with:
          path: node_modules
          key: ${{ runner.OS }}-${{ matrix.node-version }}-build-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.OS }}-${{ matrix.node-version }}-build-${{ env.cache-name }}-
            ${{ runner.OS }}-${{ matrix.node-version }}-build-
            ${{ runner.OS }}-${{ matrix.node-version }}-
            ${{ runner.OS }}-

      - run: yarn install
      - run: yarn test

  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [10.x, 12.x, 14.x]
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set Node.js version
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache Node Modules
        uses: actions/cache@v1
        with:
          path: node_modules
          key: ${{ runner.OS }}-${{ matrix.node-version }}-build-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.OS }}-${{ matrix.node-version }}-build-${{ env.cache-name }}-
            ${{ runner.OS }}-${{ matrix.node-version }}-build-
            ${{ runner.OS }}-${{ matrix.node-version }}-
            ${{ runner.OS }}-

      - run: yarn install
      - run: yarn build
      - run: yarn size-limit

  depcheck:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [10.x, 12.x, 14.x]
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set Node.js version
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - run: npx depcheck
  
  release:
    name: Trigger a release
    runs-on: ubuntu-latest
    needs: [lint, test, build, depcheck]
    if: contains(github.event_name, 'push')
    
    steps:
      - name: checkout
        uses: actions/checkout@v2
        with:
          ref: master
          fetch-depth: 0
      
      - uses: actions/setup-node@v1
        with:
          node-version: 12.x
      
      - name: Create auto-tag
        if: ${{ success() }}
        run: npx @eqworks/release tag --github -v
        env:
          GITHUB_OWNER: EQWorks
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
